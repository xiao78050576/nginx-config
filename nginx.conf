
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
	
	upstream local_server {  
		server localhost:9090;
	}
	
	#8082端口 前后端分离的静态资源
    server {
        listen       80;
        server_name  localhost;
        client_max_body_size 10M;
		
		location ~* swagger {
			 proxy_redirect off;
			 proxy_set_header Host $host:$server_port;
			 proxy_set_header X-Real-IP $remote_addr;
			 proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
			 proxy_pass http://local_server;
		}
		 
        #以下是静态资源
        location ~* \.(html|htm|js|css|jpg|png|gif|jpeg|svg|ico|eot|ttf|woff|woff2|json|pdf|mp3|mp4|xml|xls|otf)$ {
            root   E:/git-repository/canvas-ws-frontend;
            index  index.html;
        }
				
		location / {
			proxy_redirect off;
			proxy_set_header Host $host:443;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forward-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header REMOTE-HOST $remote_addr;
			proxy_pass http://local_server;
			if ($request_uri = /) {
			   return 301 http://${server_name}/index.html;
			   break;
			}
		}
		
        error_page   500 502 503 504 404 /50x.html;
        location = /50x.html {
            root   html;
        }
		
		error_log  logs/error.log  notice;
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
